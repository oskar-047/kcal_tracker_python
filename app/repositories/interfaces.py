from typing import Protocol
from collections import defaultdict
from datetime import date
from domain.food import Food
from domain.meal import Meal
from domain.user import UserData, UserWeight

class FoodRepo(Protocol):
    def list_foods(self) -> list[Food]: ...
    def create_food(self, food: Food) -> Food: ...
    def delete_food(self, id: int) -> bool: ...
    def edit_food(self, food: Food) -> Food: ...
    def get_food_by_id(self, food_id) -> Food | None: ...
    def get_foods_by_ids(self, food_ids) -> list[Food]: ...
    def edit_food_color(self, color: str, food_id: int) -> bool: ...
    def set_default_food(self, food_id: int) -> bool:...
    def unset_default_food(self, food_id: int) -> bool:...
    # def get_default_food(self, food_id: int) -> bool:...

class MealRepo(Protocol):
    def list_meals(self, start: int, end: int) -> list[Meal]: ...
    def create_meal(self, meal: Meal) -> Meal: ...
    def delete_meal(self, id: int) -> bool: ...
    def edit_meal(self, meal: Meal) -> Meal | None: ...
    def get_meal_eaten_status(self, meal_id) -> int: ...
    def set_meal_eaten_status(self, meal_id, eaten_status) -> bool: ...
    def get_daily_kcal(self, min_dt: int, max_dt: int) -> defaultdict[date, int | None]: ...
    def get_meals_by_foods(self, min_dt, max_dt, foods): ...

class UserRepo(Protocol):
    def get_user(self, user_id: int) -> UserData | None: ...
    def create_user(self, user_data: UserData) -> UserData: ...
    def create_user_minimal(self, lan: str) -> UserData: ...
    def edit_user(self, user_data: UserData) -> UserData: ...
    def get_user_lan(self, user_id: int) -> str: ...
    def change_user_lan(self, user_id: int, lan: str) -> bool: ...
    def track_weight(self, weight: float, user_id: int, dt: date) -> float: ...
    def get_all_tracked_weights(self, user_id) -> list[UserWeight] | None: ...
    def get_user_goal(self, user_id) -> dict | None: ...