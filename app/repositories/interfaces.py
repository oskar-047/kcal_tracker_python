from typing import Protocol
from domain.food import Food
from domain.meal import Meal
from domain.user import UserData, UserWeight

class FoodRepo(Protocol):
    def list_foods(self) -> list[Food]: ...
    def create_food(self, food: Food) -> Food: ...
    def delete_food(self, id: int) -> bool: ...
    def edit_food(self, food: Food) -> Food: ...
    def get_food_by_id(self, food_id) -> Food | None: ...

class MealRepo(Protocol):
    def list_meals(self, start: int, end: int) -> list[Meal]: ...
    def create_meal(self, meal: Meal) -> Meal: ...
    def delete_meal(self, id: int) -> bool: ...
    def edit_meal(self, meal: Meal) -> Meal | None: ...
    def get_meal_eaten_status(self, meal_id) -> int: ...
    def set_meal_eaten_status(self, meal_id, eaten_status) -> bool: ...

class UserRepo(Protocol):
    def get_user(self, user_id: int) -> UserData: ...
    def create_user(self, user_data: UserData) -> UserData: ...
    def create_user_minimal(self, lan: str) -> UserData: ...
    def edit_user(self, user_data: UserData) -> UserData: ...
    def get_user_lan(self, user_id: int) -> str | None: ...
    def change_user_lan(self, user_id, lan) -> bool: ...
    def track_weight(self, user_id, weight) -> float: ...
    def get_all_tracked_weights(self, user_id) -> list[UserWeight] | None: ...
    def get_user_goal(self, user_id) -> dict | None: ...